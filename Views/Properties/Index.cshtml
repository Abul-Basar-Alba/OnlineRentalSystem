@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using OnlineRentalSystem.Models.Identity
@model IEnumerable<OnlineRentalSystem.Models.Rental.Property>
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

@{
    var currentUser = new ApplicationUser();
    if (SignInManager.IsSignedIn(User))
    {
        currentUser = await UserManager.GetUserAsync(User);
    }
}
<div class="container py-5">
    <h1 class="text-center mb-5 display-4 fw-bold text-primary">Explore Our Rentals</h1>
    @if (SignInManager.IsSignedIn(User))
    {
        // Get the current ApplicationUser object

        @if (currentUser != null && await UserManager.IsInRoleAsync(currentUser, "Seller"))
        {
            <div class="row mb-2">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <a asp-controller="Properties" asp-action="Create" class="btn btn-outline-info w-100">Add New Property</a>
                </div>
                <div class="col-md-4"></div>
            </div>

        }

    }

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center" role="alert">
            <h4 class="alert-heading">No Properties Found Yet!</h4>
            <p>It looks like there are no rental properties listed at the moment. Please check back later or consider listing your own!</p>
            <hr>
            
            
        </div>
    }
    
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @* Responsive grid for cards *@
            @foreach (var property in Model)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm border-0 rounded-lg overflow-hidden">
                        @* Property Image (using first image or a placeholder) *@
                        @{
                            var imageUrl = property.Images?.FirstOrDefault()?.ImageUrl ?? "/images/placeholder-property.jpg"; // Default placeholder
                            var altText = property.Images?.FirstOrDefault()?.AltText ?? "Property image";
                        }
                        <img src="@imageUrl" class="card-img-top object-cover" alt="@altText" style="height: 160px; width: 100%; object-fit: cover;">

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title text-truncate mb-2 fw-bold text-dark">@property.Title</h5>
                            <p class="card-text text-muted small mb-1">
                                <i class="bi bi-geo-alt-fill me-1"></i> @property.City, @property.Country
                            </p>
                            <p class="card-text fw-bold text-success fs-5 mb-3">
                                @property.PricePerDay.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("en-BD")) / day @* Currency formatted for Bangladesh BDT *@
                            </p>

                            <p class="card-text text-secondary mb-3 flex-grow-1">
                                @(property.Description.Length > 100 ? property.Description.Substring(0, 100) + "..." : property.Description)
                            </p>

                            <div class="mt-auto d-grid gap-2">
                                @* Buttons at the bottom, stretched to full width *@
                                <a asp-controller="Properties" asp-action="Details" asp-route-id="@property.PropertyId" class="btn btn-primary btn-sm">
                                    <i class="bi bi-info-circle-fill me-1"></i> View Details
                                </a>
                                @* Optional: Add a quick booking button if desired *@
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    // Get the current ApplicationUser object
                                    
                                    @if (currentUser != null && await UserManager.IsInRoleAsync(currentUser, "Buyer"))
                                    {
                                        <a asp-controller="Bookings" asp-action="Create" asp-route-propertyId="@property.PropertyId" class="btn btn-outline-success btn-sm mt-2">
                                            <i class="bi bi-calendar-plus-fill me-1"></i> Book Now
                                        </a>
                                    }

                                }
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    // Get the current ApplicationUser object

                                    @if (currentUser != null && await UserManager.IsInRoleAsync(currentUser, "Seller"))
                                    {
                                        <a asp-controller="Images" asp-action="Create" asp-route-propertyId="@property.PropertyId" class="btn btn-outline-success btn-sm mt-2">
                                            <i class="bi bi-calendar-plus-fill me-1"></i> Add Image
                                        </a>
                                    }

                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
